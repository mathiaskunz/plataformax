/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.plataformax.swingui;

import com.plataformax.configuration.Configuration;
import com.plataformax.x509managers.MyX509KeyManager;
import com.plataformax.x509managers.TestKeyStore;
import java.awt.event.ActionEvent;
import java.awt.event.WindowEvent;

import java.io.File;
import java.io.IOException;
import java.security.KeyManagementException;
import java.security.KeyStoreException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.net.ssl.SSLContext;

import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;

import javax.ws.rs.client.Client;
import javax.ws.rs.client.ClientBuilder;
import javax.ws.rs.client.Entity;
import javax.ws.rs.client.WebTarget;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;

import org.apache.commons.io.FileUtils;

import org.glassfish.jersey.SslConfigurator;
import org.glassfish.jersey.client.ClientConfig;
import org.glassfish.jersey.media.multipart.FormDataMultiPart;
import org.glassfish.jersey.media.multipart.MultiPartFeature;
import org.glassfish.jersey.media.multipart.file.FileDataBodyPart;
import org.jivesoftware.smack.SmackException;
import org.jivesoftware.smack.XMPPException;

/**
 *
 * @author Mathias
 */
public class TelaLogin extends javax.swing.JFrame {

    private static final String ENTER_KEY = "ENTER";
    private final String SECURITY_DIRECTORY_PATH = ".\\nbproject\\private\\security\\";
    private Configuration config;
    private KeyStroke keyStroke;

    /**
     * Creates new form TelaLogin
     *
     * @throws java.lang.Exception
     */
    public TelaLogin() throws Exception {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        campoUsuario = new javax.swing.JTextField();
        campoSenha = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        botaoLogin = new javax.swing.JButton();
        botaoCriarConta = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setAutoscrolls(true);

        jLabel1.setText("Usuário");

        jLabel2.setText("Senha");

        botaoLogin.setText("Fazer Login");
        botaoLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoLoginActionPerformed(evt);
            }
        });

        botaoCriarConta.setText("Criar Conta");
        botaoCriarConta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCriarContaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(132, 132, 132)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(campoUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                            .addComponent(campoSenha)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(174, 174, 174)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(178, 178, 178)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addComponent(botaoLogin)
                        .addGap(18, 18, 18)
                        .addComponent(botaoCriarConta)))
                .addContainerGap(114, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(3, 3, 3)
                .addComponent(campoSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoLogin)
                    .addComponent(botaoCriarConta))
                .addContainerGap(110, Short.MAX_VALUE))
        );

        keyStroke = KeyStroke.getKeyStroke(ENTER_KEY);
        Object actionKey = campoSenha.getInputMap(
            JComponent.WHEN_FOCUSED).get(keyStroke);
        campoSenha.getActionMap().put(actionKey, wrapper);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private final Action wrapper = new AbstractAction() {
        @Override
        public void actionPerformed(ActionEvent ae) {
            botaoLogin.doClick();
        }
    };


    private void botaoLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoLoginActionPerformed
        TelaPrincipal tp;
        String username = campoUsuario.getText();
        String password = campoSenha.getText();

        MyX509KeyManager km = checkUsernameAndPassword(username, password);

        //VERIFICA LOGIN E SENHA
        if (km != null) {

            try {
                //TESTA SE O CERTIFICADO DO CLIENTE TENTANDO LOGAR É VÁLIDO
                if (checkOwnCertValidity(km, username)) {

                    config = new Configuration(username, password);

                    try {
                        tp = new TelaPrincipal(username, password, this.config);
                        tp.setVisible(true);
                        tp.revalidate();
                        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
                    } catch (Exception ex) {
                        Logger.getLogger(TelaLogin.class.getName()).log(Level.SEVERE, null, ex);
                        
                        System.out.println("ERRO AO CRIAR TELA PRINCIPAL");
                        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
                    }

                    //SE NÃO, TENTA RENOVAR O CERTIFICADO
                } else {

                    //TIRAR ISSO PARA PRODUÇÃO, SÓ ESTÁ AQUI PARA PERMITIR CONEXÃO COM LOCALHOST
                    //O TLS COMPARA O CN DO CERTIFICADO COM O HOSTNAME O QUAL ESTÁ SE CONECTANDO
                    //COMO O CN DO CERTIFICADO DO SERVIDOR NÃO É 'LOCALHOST'
                    //VAI DAR PROBLEMA DE 'MATCHING'
                    javax.net.ssl.HttpsURLConnection.setDefaultHostnameVerifier(
                            new javax.net.ssl.HostnameVerifier() {

                        @Override
                        public boolean verify(String hostname,
                                javax.net.ssl.SSLSession sslSession) {
                            return true;
                        }
                    });

                    ClientConfig clientConfig = new ClientConfig();
                    clientConfig.register(MultiPartFeature.class);

                    SslConfigurator sslConfig = SslConfigurator.newInstance()
                            .keyStoreFile(SECURITY_DIRECTORY_PATH + username)
                            .keyPassword(password)
                            .trustStoreFile(SECURITY_DIRECTORY_PATH + username + "Trust")
                            .trustStorePassword(password);

                    SSLContext sslContext = sslConfig.createSSLContext();
                    Client client = ClientBuilder.newBuilder().sslContext(sslContext).build();
                    Response response;

                    new TestKeyStore().genCertReq(username, password);

                    String serialNumber = null;
                    try {
                        serialNumber = km.getCertificateSerialNumber(username);
                        if (serialNumber.length() == 3) {
                            serialNumber = "0".concat(serialNumber);
                        }

                        System.out.println("SERIAL: " + serialNumber);
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(rootPane, "Erro ao tentar recuperar o número serial"
                                + " do seu certificado, para renová-lo. Seu pedido será enviado, mas "
                                + "será recusado.");
                        Logger.getLogger(TelaLogin.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    final FileDataBodyPart filePart = new FileDataBodyPart("file",
                            new File(SECURITY_DIRECTORY_PATH + username + ".csr"));
                    FormDataMultiPart formDataMultiPart = new FormDataMultiPart();
                    final FormDataMultiPart multipart = (FormDataMultiPart) formDataMultiPart
                            .field("serial", serialNumber, MediaType.TEXT_PLAIN_TYPE)
                            .bodyPart(filePart);

                    WebTarget target = client.target("https://localhost:9998/api/app/renewcert");
                    response = target.request().post(Entity.entity(multipart, multipart.getMediaType()));

                    if (response.getStatus() != 500) {
                        System.out.println(response.getStatus());

                        writeOwnCert(response, username);

                        try {
                            formDataMultiPart.close();
                            multipart.close();
                            client.close();

                            new TestKeyStore().importCert(username, password);
                            System.out.println("CERTIFICADO IMPORTADO COM SUCESSO");
                            JOptionPane.showMessageDialog(this, "ATENÇÃO: CERTIFICADO RENOVADO!");
                            botaoLogin.doClick();
                        } catch (IOException ex) {
                            JOptionPane.showMessageDialog(rootPane, "Erro ao tentar importar seu certificado renovado "
                                    + "para a sua KeyStore. Você pode tentar importá-lo manualmente");
                            System.out.println("FALHA AO RENOVAR CERTIFICADO");
                            Logger.getLogger(TelaLogin.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }else{
                        JOptionPane.showMessageDialog(rootPane, "Erro ao renovar seu certificado."
                                + "Não será possível fazer login até que seu certificado seja renovado.");
                    }

                }
            } catch (KeyStoreException ex) {
                JOptionPane.showMessageDialog(rootPane, "Erro ao verificar a válidade do seu certificado.");
            } catch (KeyManagementException ex) {
                Logger.getLogger(TelaLogin.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SmackException ex) {
                JOptionPane.showMessageDialog(rootPane, "Erro ao conectar ao servidor. Servidor está demorando para responder"
                        + ". Favor tentar novamente mais tarde.");
                ex.printStackTrace();
            } catch (IOException ex) {
                Logger.getLogger(TelaLogin.class.getName()).log(Level.SEVERE, null, ex);
            } catch (XMPPException ex) {
                Logger.getLogger(TelaLogin.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex) {
                Logger.getLogger(TelaLogin.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_botaoLoginActionPerformed

    //ESCREVE O CERTIFICADO DO CLIENTE NA PASTA DE SEGURANÇA
    private void writeOwnCert(Response response, String username) {
        String certFilePath = SECURITY_DIRECTORY_PATH + username + ".cer";

        byte[] certBytes = response.readEntity(byte[].class);

        try {
            FileUtils.writeByteArrayToFile(new File(certFilePath), certBytes);
            System.out.println("CERTIFICADO DO USUÁRIO BAIXADO COM SUCESSO");
        } catch (IOException e) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao tentar gravar seu certificado na pasta.");
            System.out.println("CERTIFICADO DO USUÁRIO NÃO ESCRITO NA PASTA");
            e.printStackTrace();
        }
    }

    //VERIFICA A VALIDADE DO CERTIFICADO DO CLIENTE TENTANDO LOGAR
    //RETORNA 'TRUE' SE FOR VÁLIDO
    private boolean checkOwnCertValidity(MyX509KeyManager km, String username) throws KeyStoreException {
        return km.checkValidity(username);
    }

    private MyX509KeyManager checkUsernameAndPassword(String username, String password) {
        try {
            return new MyX509KeyManager(username, password);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Usuário ou senha incorretos!");
            return null;
        }
    }


    private void botaoCriarContaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCriarContaActionPerformed
        TelaCriarConta tcc = new TelaCriarConta();
        tcc.setVisible(true);
    }//GEN-LAST:event_botaoCriarContaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new TelaLogin().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(TelaLogin.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoCriarConta;
    private javax.swing.JButton botaoLogin;
    private javax.swing.JTextField campoSenha;
    private javax.swing.JTextField campoUsuario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
